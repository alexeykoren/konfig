group 'com.natpryce'
version(hasProperty("-version") ? property("-version") : "SNAPSHOT")

println "building version ${version}"


buildscript {
    ext.kotlin_version = '1.1.3'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.8"
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compileOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile 'junit:junit:4.12'
    testCompile 'com.natpryce:hamkrest:1.4.0.0'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'konfig',
                'Implementation-Vendor': 'com.natpryce',
                'Implementation-Version': version
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}


dokka {
    outputFormat 'javadoc'
    outputDirectory 'build/javadoc'
}

task javadocJar(type: Jar, dependsOn: 'dokka') {
    classifier 'javadoc'
    from 'build/javadoc'
}

test {
    include 'com/natpryce/konfig/**'
    scanForTestClasses true
    reports {
        junitXml.enabled = true
        html.enabled = true
    }

    beforeTest { desc ->
        print "${desc.className.substring("com.natpryce.konfig.".length())}: ${desc.name.replace("_", " ")}"
    }
    afterTest { desc, result ->
        println " -> ${result.resultType}"
    }
}

artifacts {
    archives sourcesJar, javadocJar
}

task wrapper(type: Wrapper) {
        gradleVersion = '2.14'
        distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}